---
title: "PHQ4R - Data Analysis (Study 1)"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: true
    toc: true
    fig-dpi: 300
    fig-width: 11.33
---

## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(mirt)
```


```{r}
#| code-fold: false

df <- read.csv("https://raw.githubusercontent.com/RealityBending/IllusionGameReliability/main/data/preprocessed_questionnaires.csv") |>
  select(Sex, Age, starts_with("Item_PHQ4")) |>
  filter(!is.na(Item_PHQ4_Anxiety_1))

names(df) <- str_remove_all(names(df), "Item_PHQ4_")


df2 <- read.csv("../study2/data/data_raw.csv") |>
  filter(PHQ4_Condition == "PHQ4 - Revised") |>
  select(Sex = Gender, Age, starts_with("PHQ4_"), -PHQ4_Duration, -PHQ4_Condition, -PHQ4_Order)

names(df2) <- str_remove_all(names(df2), "PHQ4_")

df2ori <- read.csv("../study2/data/data_raw.csv") |>
  filter(PHQ4_Condition == "PHQ4 - Original") |>
  select(Sex = Gender, Age, starts_with("PHQ4_"), -PHQ4_Duration, -PHQ4_Condition, -PHQ4_Order)

names(df2ori) <- str_remove_all(names(df2ori), "PHQ4_")
```

## Participants

- The first sample includes `r report::report_participants(df)`.
- The first sample includes `r report::report_participants(df2)`.



## Distribution

```{r}
add_labels <- function(x) {
  x <- case_when(
    x == 0 ~ "Not at all",
    x == 1 ~ "Once or twice",
    x == 2 ~ "Several days",
    x == 3 ~ "More than half the days",
    TRUE ~ "Nearly every day"
  )
  fct_relevel(x, c("Not at all", "Once or twice", "Several days", "More than half the days", "Nearly every day"))
}
```

::: {.panel-tabset}

### Sample 1

```{r}
#| message: false

df <- select(df, -Sex, -Age)

data <- df |>
  pivot_longer(everything(), names_to = "Item", values_to = "Answer") |>
  group_by(Item, Answer) |>
  summarise(n = n() / nrow(df)) |>
  mutate(
    Facet = str_split_fixed(Item, "_", 2)[, 1],
    # Item = str_split_fixed(Item, "_", 2)[,2],
    Answer = add_labels(Answer),
    Item = case_when(
      Item == "Anxiety_1" ~ "A1: Feeling nervous, anxious or on edge",
      Item == "Anxiety_2" ~ "A2: Not being able to stop or control worrying",
      Item == "Depression_3" ~ "D1: Feeling down, depressed, or hopeless",
      Item == "Depression_4" ~ "D2: Little interest or pleasure in doing things"
    )
  )

p1 <- data |>
  ggplot(aes(x = Answer, fill = Facet)) +
  geom_bar(aes(y = n), stat = "identity") +
  scale_y_continuous(labels = scales::percent, expand = c(0, 0)) +
  scale_fill_manual(values = c("Depression" = "#3F51B5", "Anxiety" = "#E91E63"), guide = "none") +
  labs(y = "Proportion of Answers") +
  theme_modern(axis.title.space = 10) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(),
    plot.title = element_text(face = "bold"),
    strip.text = element_text(size = rel(0.7)),
    strip.background = element_rect(fill = "#EEEEEE", colour = "white")
  ) +
  facet_wrap(~Item)
p1 + ggtitle("Proportion of answers per item")
```

The "Once or twice" answer was selected in `r insight::format_percent(mean(filter(data, Answer == "Once or twice")$n))`

```{r}
#| message: false

p1b <- rbind(
  data.frame(Scores = paste0(df$Anxiety_1, "_", df$Anxiety_2),
             Facet = "Anxiety"),
  data.frame(Scores = paste0(df$Depression_3, "_", df$Depression_4),
             Facet = "Depression")
) |> 
  group_by(Facet, Scores) |> 
  summarize(n = n() / nrow(df)) |> 
  separate(Scores, into = c("Q1", "Q2")) |> 
  mutate(Label = ifelse(Q1 == Q2, format_percent(n), "")) |> 
  mutate(Q1 = add_labels(as.numeric(Q1)),
         Q2 = add_labels(as.numeric(Q2))) |> 
  ggplot(aes(x = Q1, y = Q2)) +
  geom_tile(aes(fill = n)) +
  geom_text(aes(label = Label), size=2, color="white") +
  scale_y_discrete(expand = c(0, 0)) +
  scale_x_discrete(expand = c(0, 0)) +
  scale_fill_gradientn(colors=c("white", "#2196F3", "#3F51B5", "#673AB7"), labels = scales::percent) +
  labs(fill = "% Participants", x = "Item 1", y = "Item 2") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust=1),
        panel.grid.major = element_blank(),
        plot.title = element_text(face = "bold", hjust=0),
        strip.background=element_rect(fill="#EEEEEE", colour="white"),
        strip.text = element_text(face = "bold")) +
  facet_wrap(~Facet) 
p1b + ggtitle("Joint prevalence of responses")
```

### Sample 2

```{r}
#| message: false

df2 <- select(df2, -Sex, -Age)

data <- df2 |>
  pivot_longer(everything(), names_to = "Item", values_to = "Answer") |>
  group_by(Item, Answer) |>
  summarise(n = n() / nrow(df2)) |>
  mutate(
    Facet = str_split_fixed(Item, "_", 2)[, 1],
    # Item = str_split_fixed(Item, "_", 2)[,2],
    Answer = add_labels(Answer),
    Item = case_when(
      Item == "Anxiety_1" ~ "A1: Feeling nervous, anxious or on edge",
      Item == "Anxiety_2" ~ "A2: Not being able to stop or control worrying",
      Item == "Depression_3" ~ "D1: Feeling down, depressed, or hopeless",
      Item == "Depression_4" ~ "D2: Little interest or pleasure in doing things"
    )
  )

p1_s2 <- data |>
  ggplot(aes(x = Answer, fill = Facet)) +
  geom_bar(aes(y = n), stat = "identity") +
  scale_y_continuous(labels = scales::percent, expand = c(0, 0)) +
  scale_fill_manual(values = c("Depression" = "#3F51B5", "Anxiety" = "#E91E63"), guide = "none") +
  labs(y = "Proportion of Answers") +
  theme_modern(axis.title.space = 10) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(),
    plot.title = element_text(face = "bold"),
    strip.text = element_text(size = rel(0.7)),
    strip.background = element_rect(fill = "#EEEEEE", colour = "white")
  ) +
  facet_wrap(~Item)
p1_s2 + ggtitle("Proportion of answers per item")
```

The "Once or twice" answer was selected in `r insight::format_percent(mean(filter(data, Answer == "Once or twice")$n))`

```{r}
#| message: false

p1b_s2 <- rbind(
  data.frame(Scores = paste0(df2$Anxiety_1, "_", df2$Anxiety_2),
             Facet = "Anxiety"),
  data.frame(Scores = paste0(df2$Depression_3, "_", df2$Depression_4),
             Facet = "Depression")
) |> 
  group_by(Facet, Scores) |> 
  summarize(n = n() / nrow(df2)) |> 
  separate(Scores, into = c("Q1", "Q2")) |> 
  mutate(Label = ifelse(Q1 == Q2, format_percent(n), "")) |> 
  mutate(Q1 = add_labels(as.numeric(Q1)),
         Q2 = add_labels(as.numeric(Q2))) |> 
  ggplot(aes(x = Q1, y = Q2)) +
  geom_tile(aes(fill = n)) +
  geom_text(aes(label = Label), size=2, color="white") +
  scale_y_discrete(expand = c(0, 0)) +
  scale_x_discrete(expand = c(0, 0)) +
  scale_fill_gradientn(colors=c("white", "#2196F3", "#3F51B5", "#673AB7"), labels = scales::percent) +
  labs(fill = "% Participants", x = "Item 1", y = "Item 2") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust=1),
        panel.grid.major = element_blank(),
        plot.title = element_text(face = "bold", hjust=0),
        strip.background=element_rect(fill="#EEEEEE", colour="white"),
        strip.text = element_text(face = "bold")) +
  facet_wrap(~Facet) 
p1b_s2 + ggtitle("Joint prevalence of responses")
```

:::


## Anxiety


```{r}
df_anx <- select(df, contains("Anxiety"))
df_anx2 <- select(df2, contains("Anxiety"))
df_anxfull <- rbind(df_anx, df_anx2)
```


### Consistency

- Sample 1: Cronbach's alpha is `r insight::format_value(performance::cronbachs_alpha(df_anx), digits=3)`.
- Sample 2: Cronbach's alpha is `r insight::format_value(performance::cronbachs_alpha(df_anx2), digits=3)`.


### Model

::: {.panel-tabset}

#### Sample 1

```{r}
m_anxiety <- mirt(df_anx, model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

m_anxiety

# Factor loadings
summary(m_anxiety)

# Alpha
a <- coef(m_anxiety)
a <- data.frame(
  Item = c("Anxiety 1", "Anxiety 2"),
  Discrimination = c(paste0(format_value(a$Anxiety_1[1, 1]), ", ", format_ci(a$Anxiety_1[2, 1], a$Anxiety_1[3, 1])), paste0(format_value(a$Anxiety_2[1, 1]), ", ", format_ci(a$Anxiety_2[2, 1], a$Anxiety_2[3, 1])))
)
knitr::kable(a)
```

```{r}
#| eval: false

# Plots
plot(m_anxiety, type = "trace", theta_lim = c(-3, 3))
plot(m_anxiety, type = "infotrace", theta_lim = c(-3, 3))
plot(m_anxiety, type = "score", theta_lim = c(-3, 3))
plot(m_anxiety, type = "infoSE", theta_lim = c(-3, 3))
plot(m_anxiety, type = "rxx", theta_lim = c(-3, 3))
```

#### Sample 2

```{r}
m_anxiety2 <- mirt(df_anx2, model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

m_anxiety2

# Factor loadings
summary(m_anxiety2)

# Alpha
a <- coef(m_anxiety2)
a <- data.frame(
  Item = c("Anxiety 1", "Anxiety 2"),
  Discrimination = c(paste0(format_value(a$Anxiety_1[1, 1]), ", ", format_ci(a$Anxiety_1[2, 1], a$Anxiety_1[3, 1])), paste0(format_value(a$Anxiety_2[1, 1]), ", ", format_ci(a$Anxiety_2[2, 1], a$Anxiety_2[3, 1])))
)
knitr::kable(a)
```

```{r}
#| eval: false

# Plots
plot(m_anxiety2, type = "trace", theta_lim = c(-3, 3))
plot(m_anxiety2, type = "infotrace", theta_lim = c(-3, 3))
plot(m_anxiety2, type = "score", theta_lim = c(-3, 3))
plot(m_anxiety2, type = "infoSE", theta_lim = c(-3, 3))
plot(m_anxiety2, type = "rxx", theta_lim = c(-3, 3))
```

Same on original version: 

```{r}
#| eval: false

m_anxiety2ori <- mirt(select(df2ori, contains("Anxiety")), model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

plot(m_anxiety2ori, type = "trace", theta_lim = c(-3, 3))
plot(m_anxiety2ori, type = "infotrace", theta_lim = c(-3, 3))
```

#### Full

```{r}
m_anxietyfull <- mirt(df_anxfull, model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

plot(m_anxietyfull, type = "trace", theta_lim = c(-3, 3))
# plot(m_anxietyfull, type = "infotrace", theta_lim = c(-3, 3))
```


:::

### Category Characteristic Curves (CRC) and Item Information Curves

Typically, an optimally informative item will have a large location and broad category coverage (as indicated by location parameters) over theta.

::: {.panel-tabset}

#### Sample 1

```{r}
crc <- function(mod, data) {
  Theta <- matrix(seq(-3.5, 3.5, by = .01))
  rez <- data.frame()
  for (i in 1:2) {
    dat <- as.data.frame(probtrace(extract.item(mod, i), Theta))
    dat$Theta <- Theta[, 1]
    dat$Information <- normalize(iteminfo(extract.item(mod, i), Theta))
    dat <- pivot_longer(dat, -one_of(c("Theta", "Information")), names_to = "Answer", values_to = "Probability")
    dat$Item <- names(data)[i]
    rez <- rbind(rez, dat)
  }

  rez <- rez |>
    mutate(
      Answer = case_when(
        Answer == "P.1" ~ "Not at all",
        Answer == "P.2" ~ "Once or twice",
        Answer == "P.3" ~ "Several days",
        Answer == "P.4" ~ "More than half the days",
        TRUE ~ "Nearly every day"
      ),
      Answer = fct_relevel(Answer, c("Not at all", "Once or twice", "Several days", "More than half the days", "Nearly every day")),
      Item = case_when(
        Item == "Anxiety_1" ~ "A1: Feeling nervous, anxious or on edge",
        Item == "Anxiety_2" ~ "A2: Not being able to stop or control worrying",
        Item == "Depression_3" ~ "D1: Feeling down, depressed, or hopeless",
        Item == "Depression_4" ~ "D2: Little interest or pleasure in doing things"
      )
    )

  # Get close to 0.95
  i1 <- rez[rez$Item == unique(rez$Item)[1], ]
  i2 <- rez[rez$Item == unique(rez$Item)[2], ]
  minmax <- rbind(
    rbind(
      i1[i1$Answer == "Not at all", ][which.min(abs(i1[i1$Answer == "Not at all", ]$Probability - 0.95)), ],
      i1[i1$Answer == "Nearly every day", ][which.min(abs(i1[i1$Answer == "Nearly every day", ]$Probability - 0.95)), ]
    ),
    rbind(
      i2[i2$Answer == "Not at all", ][which.min(abs(i2[i2$Answer == "Not at all", ]$Probability - 0.95)), ],
      i2[i2$Answer == "Nearly every day", ][which.min(abs(i2[i2$Answer == "Nearly every day", ]$Probability - 0.95)), ]
    )
  )

  p <- rez |>
    ggplot(aes(x = Theta, y = Probability)) +
    geom_line(aes(y = Information), linetype = "dotted", color = "grey") +
    geom_line(aes(color = Answer), linewidth = 1) +
    # geom_vline(data = minmax, aes(xintercept = Theta), linetype = "dashed") +
    scale_y_continuous(labels = scales::percent, expand = c(0, 0.005)) +
    scale_color_flat_d("rainbow") +
    facet_grid(~Item) +
    theme_modern(axis.title.space = 5) +
    theme(strip.background = element_rect(fill = "#EEEEEE", colour = "white"))
  list(p = p, rez = rez, minmax = minmax)
}

out <- crc(m_anxiety, df_anx)
p2a <- out$p + labs(x = expression(Anxiety ~ (theta)))
p2a
```

#### Sample 2

```{r}
out2 <- crc(m_anxiety2, df_anx2)
p2a_s2 <- out2$p + labs(x = expression(Anxiety ~ (theta)))
p2a_s2
```


:::

### Normalized scoring

::: {.panel-tabset}

#### Sample 1

```{r}
normalize_scores <- function(data, minmax) {
  minmax <- minmax[minmax$Theta %in% range(minmax$Theta), ]

  item <- data.frame()
  scores <- data.frame()
  for (i in unique(data$Item)) {
    item <- data[data$Item == i, ] |>
      filter(Theta >= min(minmax$Theta) & Theta <= max(minmax$Theta)) |>
      mutate(Theta_n = normalize(Theta)) |>
      rbind(item)

    scores <- item[item$Item == i, ] |>
      group_by(Answer) |>
      filter(Probability == max(Probability)) |>
      ungroup() |>
      mutate(label = insight::format_value(Theta_n)) |>
      rbind(scores)
  }

  item |>
    ggplot(aes(x = Theta, y = Probability, color = Answer)) +
    geom_line(linewidth = 1) +
    geom_segment(data = scores, aes(x = Theta, xend = Theta, y = 0, yend = Probability, color = Answer), linetype = "dashed") +
    geom_label(data = scores, aes(x = Theta, y = Probability, label = label), show.legend = FALSE) +
    scale_y_continuous(labels = scales::percent, expand = c(0, 0.01)) +
    scale_color_viridis_d(option = "D") +
    facet_grid(~Item) +
    theme_modern(axis.title.space = 5) +
    theme(strip.background = element_rect(fill = "#EEEEEE", colour = "white"))
}

p3a <- normalize_scores(data = out$rez, out$minmax) + labs(x = expression(Anxiety ~ (theta)))
p3a
```

#### Sample 2

```{r}
p3a_s2 <- normalize_scores(data = out2$rez, out2$minmax) + labs(x = expression(Anxiety ~ (theta)))
p3a_s2
```

:::



## Depression

```{r}
df_dep <- select(df, contains("Depression"))
df_dep2 <- select(df2, contains("Depression"))
```


### Consistency

- Sample 1: Cronbach's alpha is `r insight::format_value(performance::cronbachs_alpha(df_dep), digits=3)`.
- Sample 2: Cronbach's alpha is `r insight::format_value(performance::cronbachs_alpha(df_dep2), digits=3)`.

### Model

::: {.panel-tabset}

#### Sample 1

```{r}
m_depression <- mirt(df_dep, model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

m_depression

# Factor loadings
summary(m_depression)

# Alpha
a2 <- coef(m_depression)
a2 <- data.frame(
  Item = c("Depression 1", "Depression 2"),
  Discrimination = c(paste0(format_value(a2$Depression_3[1, 1]), ", ", format_ci(a2$Depression_3[2, 1], a2$Depression_3[3, 1])), paste0(format_value(a2$Depression_4[1, 1]), ", ", format_ci(a2$Depression_4[2, 1], a2$Depression_4[3, 1])))
)
knitr::kable(a2)
```


#### Sample 2

```{r}
m_depression2 <- mirt(df_dep2, model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

m_depression2

# Factor loadings
summary(m_depression2)

# Alpha
a2 <- coef(m_depression2)
a2 <- data.frame(
  Item = c("Depression 1", "Depression 2"),
  Discrimination = c(paste0(format_value(a2$Depression_3[1, 1]), ", ", format_ci(a2$Depression_3[2, 1], a2$Depression_3[3, 1])), paste0(format_value(a2$Depression_4[1, 1]), ", ", format_ci(a2$Depression_4[2, 1], a2$Depression_4[3, 1])))
)
knitr::kable(a2)
```

```{r}
#| eval: false

plot(m_depression2, type = "trace", theta_lim = c(-3, 3))
plot(m_depression2, type = "infotrace", theta_lim = c(-3, 3))
```

```{r}
#| eval: false

m_dep2ori <- mirt(select(df2ori, contains("Depression")), model = 1, itemtype = "graded", SE = TRUE, verbose = FALSE)

plot(m_dep2ori, type = "trace", theta_lim = c(-3, 3))
plot(m_dep2ori, type = "infotrace", theta_lim = c(-3, 3))
```


:::



### Category Characteristic Curves (CRC) and Item Information Curves

::: {.panel-tabset}

#### Sample 1

```{r}
out <- crc(m_depression, df_dep)
p2b <- out$p + labs(x = expression(Depression ~ (theta)))
p2b
```


#### Sample 2

```{r}
out2 <- crc(m_depression2, df_dep2)
p2b_s2 <- out2$p + labs(x = expression(Depression ~ (theta)))
p2b_s2
```

:::

### Normalized scoring

::: {.panel-tabset}

#### Sample 1

```{r}
p3b <- normalize_scores(out$rez, out$minmax) + labs(x = expression(Depression ~ (theta)))
p3b
```

#### Sample 2

```{r}
p3b_s2 <- normalize_scores(out2$rez, out2$minmax) + labs(x = expression(Depression ~ (theta)))
p3b_s2
```

:::

## Figures

::: {.panel-tabset}

#### Sample 1

```{r}
#| fig-width: 16.20
#| fig-height: 10

fig1 <- wrap_elements(wrap_elements(p1 + plot_annotation(title = "A. Proportion of answers per item", theme = list(plot.title = element_text(face = "bold")))) /
  wrap_elements(p1b + plot_annotation(title = "B. Joint prevalence of responses", theme = list(plot.title = element_text(face = "bold"))))) +
  wrap_elements(p2a / p2b + plot_annotation(title = "C. Information curves per response type", theme = list(plot.title = element_text(face = "bold"))) + plot_layout(guides = "collect")) + plot_layout(widths = c(1, 1.5))


fig1
```

```{r}
#| fig-width: 16.20
#| fig-height: 10

fig2 <- p3a / p3b + plot_annotation(title = "Normalized Scoring", theme = list(plot.title = element_text(face = "bold"))) + plot_layout(guides = "collect")

fig2
```

```{r}
fig.width <- see::golden_ratio(7)
fig.height <- 7

ggsave("figures/figure1.png", fig1, width = fig.width * 1.43, height = fig.height * 1.43)
ggsave("figures/figure2.png", fig2, width = fig.width * 1.43, height = fig.height * 1.43)
```

#### Sample 2

```{r}
#| fig-width: 16.20
#| fig-height: 10

fig1_s2 <- wrap_elements(wrap_elements(p1_s2 + plot_annotation(title = "A. Proportion of answers per item", theme = list(plot.title = element_text(face = "bold")))) /
  wrap_elements(p1b_s2 + plot_annotation(title = "B. Joint prevalence of responses", theme = list(plot.title = element_text(face = "bold"))))) +
  wrap_elements(p2a_s2 / p2b_s2 + plot_annotation(title = "C. Information curves per response type", theme = list(plot.title = element_text(face = "bold"))) + plot_layout(guides = "collect")) + plot_layout(widths = c(1, 1.5))
fig1_s2
```

```{r}
#| fig-width: 16.20
#| fig-height: 10

fig2_s2 <- p3a_s2 / p3b_s2 + plot_annotation(title = "Normalized Scoring", theme = list(plot.title = element_text(face = "bold"))) + plot_layout(guides = "collect")
fig2_s2
```

```{r}
ggsave("figures/figure1_s2.png", fig1_s2, width = fig.width * 1.43, height = fig.height * 1.43)
ggsave("figures/figure2_s2.png", fig2_s2, width = fig.width * 1.43, height = fig.height * 1.43)
```

:::


## Scores 

::: {.panel-tabset}

#### Sample 1

```{r message=FALSE, warning=FALSE}
source("../score_PHQ4.R")

make_scores <- function(df) {
  data <- score_PHQ4(A1=df$Anxiety_1, A2=df$Anxiety_2, D1=df$Depression_3, D2=df$Depression_4, method="basic") |> 
    datawizard::data_addsuffix("_Basic") |> 
    cbind(
      score_PHQ4(A1=df$Anxiety_1, A2=df$Anxiety_2, D1=df$Depression_3, D2=df$Depression_4, method="normalized") |> 
        datawizard::data_addsuffix("_Normalized")) |> 
    select(matches("Depression|Anxiety")) |> 
    pivot_longer(everything()) |> 
    separate(name, into = c("Dimension", "Scoring")) 
  
  data |> 
    ggplot(aes(x=value)) + 
    geom_area(data=estimate_density(data, by = c("Dimension", "Scoring"), method = "KernSmooth") |> 
                group_by(Scoring) |> 
                normalize(select = "y"),
              aes(x = x, y = y, fill=Dimension), alpha = 0.05, position="identity") +
    geom_hline(yintercept = 0.5, linetype = "dotted") +
    stat_ecdf(aes(color=Dimension), geom = "step", linewidth=1) +
    facet_wrap(~Scoring, scales = "free") +
    scale_y_continuous(labels=scales::percent, expand = c(0, 0)) +
    scale_x_continuous(expand = c(0, 0)) +
    scale_fill_manual(values = c("Depression" = "#3F51B5", "Anxiety" = "#E91E63"), guide = "none") +
    scale_color_manual(values = c("Depression" = "#3F51B5", "Anxiety" = "#E91E63")) +
    theme_modern(axis.title.space = 5) +
    labs(title = "Distribution and Cumulative Density of the Sample", x = "Score", y = "Cumulative Proportion")
}

make_scores(df)
```


#### Sample 2

```{r message=FALSE, warning=FALSE}
make_scores(df2)
```

:::

## Correlation

::: {.panel-tabset}

#### Sample 1

```{r message=FALSE, warning=FALSE}
data.frame(Depression = mirt::fscores(m_depression)[, 1],
           Anxiety = mirt::fscores(m_anxiety)[, 1]) |> 
  correlation::correlation(df) |>
  summary() |> 
  export_table(caption = "Correlation Matrix")
```


#### Sample 2

```{r message=FALSE, warning=FALSE}
data.frame(Depression = mirt::fscores(m_depression2)[, 1],
           Anxiety = mirt::fscores(m_anxiety2)[, 1]) |> 
  correlation::correlation(df2) |>
  summary() |> 
  export_table(caption = "Correlation Matrix")
```

:::


<!-- ## Multifactor model -->


<!-- ```{r message=FALSE, warning=FALSE, eval=FALSE} -->
<!-- s <- 'Anxiety = 1,2 -->
<!--       Depression = 3,4 -->
<!--       COV = Anxiety*Depression' -->
<!-- mod <- mirt(df, model = mirt.model(s), itemtype = 'graded', SE = TRUE) -->
<!-- mod <- mirt(df, model = 2, itemtype = 'graded', SE = TRUE) -->

<!-- summary(mod) -->

<!-- # Plots -->
<!-- plot(mod, type = 'trace', theta_lim = c(-3, 3)) -->
<!-- plot(mod, type = 'infotrace', theta_lim = c(-3, 3)) -->
<!-- plot(mod, type = 'score', theta_lim = c(-3, 3)) -->

<!-- Theta <- as.matrix(expand.grid(seq(-3, 3, by = 1), seq(-3, 3, by = 1))) -->
<!-- rez <- data.frame() -->
<!-- for(i in 1:4) { -->
<!--   dat <- as.data.frame(probtrace(extract.item(mod, i), Theta)) -->
<!--   dat$Theta_F1 <- Theta[, 1] -->
<!--   dat$Theta_F2 <- Theta[, 2] -->
<!--   # dat$Information <- normalize(iteminfo(extract.item(mod, i), Theta)) -->
<!--   dat <- pivot_longer(dat, -one_of(c("Theta_F1", "Theta_F2")), names_to = "Answer", values_to = "Probability") -->
<!--   dat$Item <- names(df)[i] -->
<!--   rez <- rbind(rez, dat) -->
<!-- } -->

<!-- rez <- rez |> -->
<!--   separate(Item, into = c("Dimension", "Item_Number")) |> -->
<!--   mutate( -->
<!--     Answer = case_when( -->
<!--     Answer == "P.1" ~ "Not at all", -->
<!--     Answer == "P.2" ~ "Once or twice", -->
<!--     Answer == "P.3" ~ "Several days", -->
<!--     Answer == "P.4" ~ "More than half the days", -->
<!--     TRUE ~ "Nearly every day" -->
<!--     )) |> -->
<!--   mutate( -->
<!--     Answer = fct_relevel(Answer, c("Not at all", "Once or twice", "Several days", "More than half the days",  "Nearly every day"))) -->

<!-- rez |> -->
<!--   ggplot(aes(x = Theta_F1, y = Probability)) + -->
<!--   # geom_line(aes(y = Information), linetype = "dotted", color = "grey") + -->
<!--   geom_line(aes(color = Answer)) + -->
<!--   geom_vline(xintercept = c(-1.25, 2.25), linetype = "dashed") + -->
<!--   facet_grid(Dimension~Item_Number) + -->
<!--   theme_modern() -->
<!-- ``` -->

